// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
	"api/api/v1/admin"
	"api/internal/model"
	"context"

	"github.com/gogf/gf/v2/database/gdb"
)

type (
	IUser interface {
		GetAdminUserByUsernamePassword(ctx context.Context, in *admin.LoginReq) (user *model.UserLoginOutput, err error)
		GetUserByUsername(ctx context.Context, userName string) (user *model.UserLoginOutput, err error)
		UpdateLoginInfo(ctx context.Context, id uint64, ip string) (err error)
		Create(ctx context.Context, req *admin.UserCreateReq) (err error)
		Update(ctx context.Context, req *admin.UserUpdateReq) (err error)
		Delete(ctx context.Context, id []int) (err error)
		List(ctx context.Context, req *admin.UserListReq) (res *admin.UserListRes, err error)
		AddUserRole(ctx context.Context, roleIds []int, userId int) (err error)
		EditRoles(ctx context.Context, rolesId []int, userId int) (err error)
		AddUserPost(ctx context.Context, tx *gdb.TX, postIds []int, userId int) (err error)
	}
)

var (
	localUser IUser
)

func User() IUser {
	if localUser == nil {
		panic("implement not found for interface IUser, forgot register?")
	}
	return localUser
}

func RegisterUser(i IUser) {
	localUser = i
}
