// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
	"api/api/v1/admin"
	"api/internal/model"
	"context"
)

type (
	IMenu interface {
		Create(ctx context.Context, in *admin.MenuCreateReq) (err error)
		BindRoleRule(ctx context.Context, ruleId interface{}, roleIds []uint) (err error)
		Update(ctx context.Context, in *admin.MenuUpdateReq) (err error)
		UpdateRoleRule(ctx context.Context, ruleId uint, roleIds []uint) (err error)
		DeleteMenuByIds(ctx context.Context, ids []int) (err error)
		GetMenuList(ctx context.Context) (list []*model.AuthRuleInfoRes, err error)
		FindSonParentId(list []*model.AuthRuleInfoRes, pid uint) []*model.AuthRuleInfoRes
		GetMenuSearchList(ctx context.Context, in *admin.MenuListReq) (out []*model.AuthRuleInfoRes, err error)
		GetMenuListTree(pid uint, list []*model.AuthRuleInfoRes) []*model.AuthRuleTreeOutput
	}
)

var (
	localMenu IMenu
)

func Menu() IMenu {
	if localMenu == nil {
		panic("implement not found for interface IMenu, forgot register?")
	}
	return localMenu
}

func RegisterMenu(i IMenu) {
	localMenu = i
}
